{
  "extends": [
    "airbnb",
    "airbnb-typescript",
    "airbnb/hooks",
    "plugin:prettier/recommended",
    "plugin:sonarjs/recommended"
  ],
  "plugins": ["prettier", "sonarjs"],
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "ignorePatterns": [
    "build/",
    "dist/",
    "node_modules/",
    ".snapshots/",
    "*.min.js",
    "vite.config.ts"
  ],
  "env": {
    // Your environments (which contains several predefined global variables)
    //
    // browser: true,
    // node: true,
    // mocha: true,
    // jest: true,
    // jquery: true
  },
  "globals": {
    // Your global variables (setting to false means it's not allowed to be reassigned)
    //
    // myGlobal: false
  },
  "rules": {
    // SonarLint
    "sonarjs/no-duplicate-string": "warn",
    // Customize your rules
    "react-hooks/exhaustive-deps": "warn",
    "react/react-in-jsx-scope": "off",
    "react/function-component-definition": "off",
    "react/jsx-props-no-spreading": "off",
    "react/jsx-fragments": "off",
    "react/jsx-no-useless-fragment": "off",
    "react/require-default-props": "off",
    "react/prop-types": "off",
    "no-unused-vars": "off",
    "jsx-a11y/anchor-is-valid": "warn",
    "jsx-a11y/click-events-have-key-events": "off",
    "jsx-a11y/no-static-element-interactions": "off",
    "jsx-a11y/no-autofocus": "off",
    "no-restricted-exports": "off",
    "no-restricted-imports": ["error"],
    "no-console": "warn",
    "import/no-anonymous-default-export": "off",
    "prettier/prettier": ["warn"],
    // Too restrictive, writing ugly code to defend against a very unlikely scenario: https://eslint.org/docs/rules/no-prototype-builtins
    "no-prototype-builtins": "off",
    // https://basarat.gitbooks.io/typescript/docs/tips/defaultIsBad.html
    "import/prefer-default-export": "off",
    // Too restrictive: https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/destructuring-assignment.md
    "react/destructuring-assignment": "off",
    // No jsx extension: https://github.com/facebook/create-react-app/issues/87#issuecomment-234627904
    "react/jsx-filename-extension": "off",
    // Use function hoisting to improve code readability
    "no-use-before-define": [
      "error",
      {
        "functions": false,
        "classes": true,
        "variables": true
      }
    ],
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "ignoreRestSiblings": false
      }
    ],
    // Allow most functions to rely on type inference. If the function is exported, then `@typescript-eslint/explicit-module-boundary-types` will ensure it's typed.
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/no-use-before-define": [
      "error",
      {
        "functions": false,
        "classes": true,
        "variables": true,
        "typedefs": true
      }
    ],
    // It's not accurate in the monorepo style
    "import/no-extraneous-dependencies": "off"
  }
}
